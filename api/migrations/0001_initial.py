# Generated by Django 5.2.7 on 2025-10-29 06:41

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_address', models.CharField(db_index=True, max_length=42)),
                ('contract_name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('collecting', 'Collecting Data'), ('preprocessing', 'Preprocessing'), ('analyzing', 'Analyzing'), ('detecting', 'Running Detection'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('error_step', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', '-created_at'], name='api_analysi_status_961e14_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_data', models.JSONField(help_text='Original collected data from Ethereum')),
                ('processed_data', models.JSONField(help_text='Data after preprocessing stage')),
                ('analysis_data', models.JSONField(help_text='Results from dynamic code analysis')),
                ('detection_data', models.JSONField(help_text='Final detection results with risk scores and patterns')),
                ('risk_score', models.FloatField(default=0.0, help_text='Overall risk score (0-100)')),
                ('threat_level', models.CharField(choices=[('safe', 'Safe'), ('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical')], default='safe', max_length=20)),
                ('issues_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='api.analysisjob')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DetectedIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('info', 'Informational'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('category', models.CharField(help_text="Issue category (e.g., 'reentrancy', 'overflow', etc.)", max_length=100)),
                ('code_location', models.JSONField(blank=True, help_text='Location in contract code where issue was found', null=True)),
                ('confidence', models.FloatField(default=1.0, help_text='Detection confidence (0-1)')),
                ('additional_data', models.JSONField(blank=True, help_text='Any additional detection metadata', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='api.analysisresult')),
            ],
            options={
                'ordering': ['-severity', '-confidence'],
            },
        ),
    ]
